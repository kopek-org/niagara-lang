program: VERS
##
## Ends in an error in state: 0.
##
## program' -> . program [ # ]
##
## The known suffix of the stack is as follows:
##
##
#

Expected section or declaration.

program: OPERATION LABEL VERS VERS
##
## Ends in an error in state: 60.
##
## destinataire -> VERS . holder [ VALEUR SUR RPAR RETROCESSION QUOTEPART QUAND POUR PAR OPPOSABLE OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## VERS
##
#
program: EVENEMENT VERS
##
## Ends in an error in state: 151.
##
## event_decl -> EVENEMENT . LIDENT ATTEINT QUAND event_expr [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## EVENEMENT
##
#
program: OPERATION LABEL VERS ASSIETTE VERS
##
## Ends in an error in state: 31.
##
## pool -> ASSIETTE . raw_pool0 [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND POUR PLUS PAR OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## ASSIETTE
##
#
program: OPERATION LABEL VERS LIDENT LBRA VERS
##
## Ends in an error in state: 19.
##
## labeled_actor_desc -> LIDENT LBRA . LIDENT RBRA [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND POUR PLUS PAR OU OPPOSABLE OPERATION MULT MONTANT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LIDENT LBRA
##

Expected lowercase identifier.



program: OPERATION LABEL POUR VERS
##
## Ends in an error in state: 68.
##
## op_context -> POUR . context [ SUR QUAND POUR PAR COLON AVANT APRES ]
##
## The known suffix of the stack is as follows:
## POUR
##
#
program: OPERATION LABEL POUR UIDENT VERS
##
## Ends in an error in state: 69.
##
## context -> UIDENT . LPAR separated_nonempty_list(COMMA,UIDENT) RPAR [ VALEUR UIDENT TOUT SUR QUAND POUR PAR OPERATION MINUS EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## UIDENT
##
#
program: OPERATION LABEL POUR TOUT VERS
##
## Ends in an error in state: 76.
##
## context -> TOUT . UIDENT [ VALEUR UIDENT TOUT SUR QUAND POUR PAR OPERATION MINUS EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## TOUT
##

Expected context cases of a given context type, either for all cases or by listing them.
Examples:
 - pour Support Salles VOD
 - pour tout Support

program: EVENEMENT LIDENT ATTEINT QUAND EVENEMENT LIDENT VERS
##
## Ends in an error in state: 155.
##
## event_decl -> EVENEMENT LIDENT ATTEINT QUAND event_expr . [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## event_expr_desc -> event_expr . ET event_expr [ VALEUR OU OPERATION EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## event_expr_desc -> event_expr . OU event_expr [ VALEUR OU OPERATION EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## EVENEMENT LIDENT ATTEINT QUAND event_expr
##

Unexpected word after event expression.

program: OPERATION LABEL UIDENT
##
## Ends in an error in state: 59.
##
## operation -> OPERATION LABEL . option(destinataire) list(op_context) source expression(simple_exprs) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPERATION LABEL
##

Expected some context, or a destination, or a redistribution expression.

program: OPERATION LABEL POUR TOUT UIDENT VERS
##
## Ends in an error in state: 79.
##
## list(op_context) -> op_context . list(op_context) [ SUR QUAND PAR COLON AVANT APRES ]
##
## The known suffix of the stack is as follows:
## op_context
##

Unexpected word after context.

program: EVENEMENT LIDENT VERS
##
## Ends in an error in state: 152.
##
## event_decl -> EVENEMENT LIDENT . ATTEINT QUAND event_expr [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## EVENEMENT LIDENT
##
#
program: EVENEMENT LIDENT ATTEINT VERS
##
## Ends in an error in state: 153.
##
## event_decl -> EVENEMENT LIDENT ATTEINT . QUAND event_expr [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## EVENEMENT LIDENT ATTEINT
##
#
program: EVENEMENT LIDENT ATTEINT QUAND VERS
##
## Ends in an error in state: 154.
##
## event_decl -> EVENEMENT LIDENT ATTEINT QUAND . event_expr [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## EVENEMENT LIDENT ATTEINT QUAND
##

Malformed event declaration. Well-formed examples:
- evenement my_event atteint quand my_money = 100
- evenement my_event atteint quand 2023/12/25

program: ENTREE VERS
##
## Ends in an error in state: 156.
##
## input_decl -> ENTREE . LIDENT input_type loption(input_context_decl) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## input_decl -> ENTREE . ASSIETTE LIDENT loption(input_context_decl) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ENTREE
##
#
program: ENTREE LIDENT VERS
##
## Ends in an error in state: 157.
##
## input_decl -> ENTREE LIDENT . input_type loption(input_context_decl) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ENTREE LIDENT
##

Malformed input declaration. An input is declared with an optional computable
flag, a name, an optionnal context association, and a type.
Well-formed examples:
- entree my_input type entier
- entree assiette my_input type argent contextualisee par My_context_type

program: ENTREE LIDENT TYPE VERS
##
## Ends in an error in state: 158.
##
## input_type -> TYPE . base_type [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTUALISEE CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## TYPE
##

Expected a type identifier. It can be:
- entier
- rationnel
- argent

program: CONTEXTE VERS
##
## Ends in an error in state: 190.
##
## context_decl -> CONTEXTE . UIDENT COLON nonempty_list(context_case) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONTEXTE
##
#
program: CONTEXTE UIDENT VERS
##
## Ends in an error in state: 191.
##
## context_decl -> CONTEXTE UIDENT . COLON nonempty_list(context_case) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONTEXTE UIDENT
##
#
program: CONTEXTE UIDENT COLON VERS
##
## Ends in an error in state: 192.
##
## context_decl -> CONTEXTE UIDENT COLON . nonempty_list(context_case) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONTEXTE UIDENT COLON
##
#
program: CONTEXTE UIDENT COLON MINUS VERS
##
## Ends in an error in state: 193.
##
## context_case -> MINUS . UIDENT [ VALEUR OPERATION MINUS EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## MINUS
##
#
program: CONTEXTE UIDENT COLON MINUS UIDENT VERS
##
## Ends in an error in state: 196.
##
## nonempty_list(context_case) -> context_case . [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## nonempty_list(context_case) -> context_case . nonempty_list(context_case) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## context_case
##

Malformed context type declaration. Example:
contexte My_context_type :
 - my_case_1
 - my_case_2

program: CONSTANTE VERS
##
## Ends in an error in state: 198.
##
## constant_decl -> CONSTANTE . LIDENT COLON literal [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONSTANTE
##
#
program: CONSTANTE LIDENT VERS
##
## Ends in an error in state: 199.
##
## constant_decl -> CONSTANTE LIDENT . COLON literal [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONSTANTE LIDENT
##
#
program: CONSTANTE LIDENT COLON VERS
##
## Ends in an error in state: 200.
##
## constant_decl -> CONSTANTE LIDENT COLON . literal [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONSTANTE LIDENT COLON
##

Malformed constant declaration. Example:
- constante my_const : 99.99


program: OPERATION LABEL SUR VERS
##
## Ends in an error in state: 82.
##
## source -> SUR . pool [ RETROCESSION QUOTEPART QUAND BONUS AVANT APRES ]
##
## The known suffix of the stack is as follows:
## SUR
##

Malformed source of repartition. Example:
- sur assiette rbdApresCom

program: OPERATION LABEL VERS LIDENT LBRA LIDENT VERS
##
## Ends in an error in state: 20.
##
## labeled_actor_desc -> LIDENT LBRA LIDENT . RBRA [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND POUR PLUS PAR OU OPPOSABLE OPERATION MULT MONTANT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LIDENT LBRA LIDENT
##

Expected closing bracket.

program: OPERATION LABEL VERS ASSIETTE LIDENT VERS
##
## Ends in an error in state: 67.
##
## operation -> OPERATION LABEL option(destinataire) . list(op_context) source expression(simple_exprs) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPERATION LABEL option(destinataire)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production raw_pool0 -> LIDENT
## In state 34, spurious reduction of production pool -> ASSIETTE raw_pool0
## In state 62, spurious reduction of production holder -> pool
## In state 64, spurious reduction of production destinataire -> VERS holder
## In state 92, spurious reduction of production option(destinataire) -> destinataire
##

Unexpected word after destination.

program: OPERATION LABEL SUR ASSIETTE LIDENT VERS
##
## Ends in an error in state: 86.
##
## operation -> OPERATION LABEL option(destinataire) list(op_context) source . expression(simple_exprs) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPERATION LABEL option(destinataire) list(op_context) source
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production raw_pool0 -> LIDENT
## In state 34, spurious reduction of production pool -> ASSIETTE raw_pool0
## In state 83, spurious reduction of production source -> SUR pool
##

Unexpected word after source.

program: OPERATION VERS
##
## Ends in an error in state: 58.
##
## operation -> OPERATION . LABEL option(destinataire) list(op_context) source expression(simple_exprs) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPERATION
##

Expected label for operation.

program: DEFAUT VERS
##
## Ends in an error in state: 185.
##
## default_decl -> DEFAUT . SUR pool VERS holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFAUT
##
#
program: DEFAUT SUR ASSIETTE LIDENT UIDENT
##
## Ends in an error in state: 32.
##
## raw_pool0 -> LIDENT . [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND POUR PLUS PAR OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## raw_pool0 -> LIDENT . context_refinement [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND POUR PLUS PAR OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LIDENT
##
#
program: DEFAUT SUR ASSIETTE LIDENT VERS VERS
##
## Ends in an error in state: 188.
##
## default_decl -> DEFAUT SUR pool VERS . holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFAUT SUR pool VERS
##

Malformed default declaration. Examples:
 - defaut sur assiette rbd vers assiette rnpp
 - defaut sur assiette rnpp vers prod[residuel]

program: AVANCE VERS
##
## Ends in an error in state: 202.
##
## advance -> AVANCE . LABEL SUR holder PAR actor MONTANT formula [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE
##
#
program: AVANCE LABEL VERS
##
## Ends in an error in state: 203.
##
## advance -> AVANCE LABEL . SUR holder PAR actor MONTANT formula [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE LABEL
##
#
program: AVANCE LABEL SUR ASSIETTE LIDENT VERS
##
## Ends in an error in state: 205.
##
## advance -> AVANCE LABEL SUR holder . PAR actor MONTANT formula [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE LABEL SUR holder
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production raw_pool0 -> LIDENT
## In state 34, spurious reduction of production pool -> ASSIETTE raw_pool0
## In state 62, spurious reduction of production holder -> pool
##
#
program: AVANCE LABEL SUR ASSIETTE LIDENT PAR VERS
##
## Ends in an error in state: 206.
##
## advance -> AVANCE LABEL SUR holder PAR . actor MONTANT formula [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE LABEL SUR holder PAR
##

Malformed advance declaration. Example:
- avance 'my_advance' sur my_source par my_provider montant 5000$ vers my_output

program: DEFICIT VERS
##
## Ends in an error in state: 180.
##
## deficit_decl -> DEFICIT . SUR pool PAR holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFICIT
##
#
program: DEFICIT SUR ASSIETTE LIDENT VERS
##
## Ends in an error in state: 182.
##
## deficit_decl -> DEFICIT SUR pool . PAR holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFICIT SUR pool
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production raw_pool0 -> LIDENT
## In state 34, spurious reduction of production pool -> ASSIETTE raw_pool0
##
#
program: DEFICIT SUR ASSIETTE LIDENT PAR VERS
##
## Ends in an error in state: 183.
##
## deficit_decl -> DEFICIT SUR pool PAR . holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFICIT SUR pool PAR
##

Malformed deficit declaration. Syntax:
- deficit sur my_assiette PAR my_acteur

program: DEFAUT SUR ASSIETTE LIDENT LPAR VERS
##
## Ends in an error in state: 9.
##
## context_refinement -> LPAR . separated_nonempty_list(COMMA,context_refine_item) RPAR [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND POUR PLUS PAR OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LPAR
##
#
program: DEFAUT SUR ASSIETTE LIDENT LPAR TOUT VERS
##
## Ends in an error in state: 11.
##
## context_refinement_item_desc -> TOUT . UIDENT [ RPAR COMMA ]
##
## The known suffix of the stack is as follows:
## TOUT
##
#
program: DEFAUT SUR ASSIETTE LIDENT LPAR UIDENT VERS
##
## Ends in an error in state: 16.
##
## separated_nonempty_list(COMMA,context_refine_item) -> context_refine_item . [ RPAR ]
## separated_nonempty_list(COMMA,context_refine_item) -> context_refine_item . COMMA separated_nonempty_list(COMMA,context_refine_item) [ RPAR ]
##
## The known suffix of the stack is as follows:
## context_refine_item
##
#
program: DEFAUT SUR ASSIETTE LIDENT LPAR UIDENT COMMA VERS
##
## Ends in an error in state: 17.
##
## separated_nonempty_list(COMMA,context_refine_item) -> context_refine_item COMMA . separated_nonempty_list(COMMA,context_refine_item) [ RPAR ]
##
## The known suffix of the stack is as follows:
## context_refine_item COMMA
##

Malformed context refinement. Syntax:
- rbd(Salles,France,tout Secteur)
































program: VALEUR VERS
##
## Ends in an error in state: 1.
##
## value_decl -> VALEUR . boption(OBSERVABLE) LIDENT value_def [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## VALEUR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR OBSERVABLE VERS
##
## Ends in an error in state: 3.
##
## value_decl -> VALEUR boption(OBSERVABLE) . LIDENT value_def [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## VALEUR boption(OBSERVABLE)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT VERS
##
## Ends in an error in state: 4.
##
## value_decl -> VALEUR boption(OBSERVABLE) LIDENT . value_def [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## VALEUR boption(OBSERVABLE) LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON VERS
##
## Ends in an error in state: 5.
##
## value_def -> COLON . formula [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON LPAR VERS
##
## Ends in an error in state: 7.
##
## formula -> LPAR . formula RPAR [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: CONSTANTE LIDENT COLON INT ANS UIDENT
##
## Ends in an error in state: 25.
##
## duration_year -> INT ANS . option(duration_month) [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## INT ANS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: CONSTANTE LIDENT COLON INT ANS INT VERS
##
## Ends in an error in state: 26.
##
## duration_month -> INT . MOIS [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON LPAR DATE VERS
##
## Ends in an error in state: 41.
##
## formula -> LPAR formula . RPAR [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . PLUS formula [ TOTAL RPAR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . MINUS formula [ TOTAL RPAR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . MULT formula [ TOTAL RPAR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . DIV formula [ TOTAL RPAR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . COURANT [ TOTAL RPAR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . TOTAL [ TOTAL RPAR PLUS MULT MINUS DIV COURANT ]
##
## The known suffix of the stack is as follows:
## LPAR formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE PLUS VERS
##
## Ends in an error in state: 44.
##
## formula_desc -> formula PLUS . formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE PLUS DATE MOIS
##
## Ends in an error in state: 45.
##
## formula_desc -> formula . PLUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula PLUS formula . [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MINUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MULT formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . DIV formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . COURANT [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . TOTAL [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula PLUS formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE MULT VERS
##
## Ends in an error in state: 46.
##
## formula_desc -> formula MULT . formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula MULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE MULT DATE MOIS
##
## Ends in an error in state: 47.
##
## formula_desc -> formula . PLUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MINUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MULT formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula MULT formula . [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . DIV formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . COURANT [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . TOTAL [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula MULT formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE DIV VERS
##
## Ends in an error in state: 52.
##
## formula_desc -> formula DIV . formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE DIV DATE MOIS
##
## Ends in an error in state: 53.
##
## formula_desc -> formula . PLUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MINUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MULT formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . DIV formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula DIV formula . [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . COURANT [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . TOTAL [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula DIV formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE MINUS VERS
##
## Ends in an error in state: 54.
##
## formula_desc -> formula MINUS . formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE MINUS DATE MOIS
##
## Ends in an error in state: 55.
##
## formula_desc -> formula . PLUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MINUS formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula MINUS formula . [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MULT formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . DIV formula [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . COURANT [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . TOTAL [ VERS VALEUR TOTAL SUR RPAR RETROCESSION QUOTEPART QUAND PLUS OU OPPOSABLE OPERATION MULT MINUS LPAR EVENEMENT ET EQ EOF ENVERS ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula MINUS formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: VALEUR LIDENT COLON DATE VERS
##
## Ends in an error in state: 56.
##
## formula_desc -> formula . PLUS formula [ VALEUR TOTAL RPAR QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MINUS formula [ VALEUR TOTAL RPAR QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MULT formula [ VALEUR TOTAL RPAR QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . DIV formula [ VALEUR TOTAL RPAR QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . COURANT [ VALEUR TOTAL RPAR QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . TOTAL [ VALEUR TOTAL RPAR QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## value_def -> COLON formula . [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## COLON formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: AVANCE LABEL SUR LIDENT UIDENT
##
## Ends in an error in state: 61.
##
## actor_desc -> LIDENT . [ VERS VALEUR SUR RPAR RETROCESSION QUOTEPART QUAND POUR PAR OPPOSABLE OPERATION MONTANT EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## labeled_actor_desc -> LIDENT . LBRA LIDENT RBRA [ VERS VALEUR SUR RPAR RETROCESSION QUOTEPART QUAND POUR PAR OPPOSABLE OPERATION MONTANT EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL POUR UIDENT LPAR VERS
##
## Ends in an error in state: 70.
##
## context -> UIDENT LPAR . separated_nonempty_list(COMMA,UIDENT) RPAR [ VALEUR UIDENT TOUT SUR QUAND POUR PAR OPERATION MINUS EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## UIDENT LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL POUR UIDENT LPAR UIDENT VERS
##
## Ends in an error in state: 71.
##
## separated_nonempty_list(COMMA,UIDENT) -> UIDENT . [ RPAR ]
## separated_nonempty_list(COMMA,UIDENT) -> UIDENT . COMMA separated_nonempty_list(COMMA,UIDENT) [ RPAR ]
##
## The known suffix of the stack is as follows:
## UIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL POUR UIDENT LPAR UIDENT COMMA VERS
##
## Ends in an error in state: 72.
##
## separated_nonempty_list(COMMA,UIDENT) -> UIDENT COMMA . separated_nonempty_list(COMMA,UIDENT) [ RPAR ]
##
## The known suffix of the stack is as follows:
## UIDENT COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL POUR TOUT UIDENT QUAND
##
## Ends in an error in state: 81.
##
## operation -> OPERATION LABEL option(destinataire) list(op_context) . source expression(simple_exprs) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPERATION LABEL option(destinataire) list(op_context)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 79, spurious reduction of production list(op_context) ->
## In state 80, spurious reduction of production list(op_context) -> op_context list(op_context)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR VERS
##
## Ends in an error in state: 84.
##
## source -> PAR . actor [ RETROCESSION QUOTEPART QUAND BONUS AVANT APRES ]
##
## The known suffix of the stack is as follows:
## PAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT RETROCESSION VERS
##
## Ends in an error in state: 87.
##
## simple_expr -> RETROCESSION . formula SUR holder option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## RETROCESSION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT RETROCESSION DATE VERS
##
## Ends in an error in state: 88.
##
## formula_desc -> formula . PLUS formula [ TOTAL SUR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . MINUS formula [ TOTAL SUR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . MULT formula [ TOTAL SUR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . DIV formula [ TOTAL SUR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . COURANT [ TOTAL SUR PLUS MULT MINUS DIV COURANT ]
## formula_desc -> formula . TOTAL [ TOTAL SUR PLUS MULT MINUS DIV COURANT ]
## simple_expr -> RETROCESSION formula . SUR holder option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## RETROCESSION formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT RETROCESSION DATE SUR VERS
##
## Ends in an error in state: 89.
##
## simple_expr -> RETROCESSION formula SUR . holder option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## RETROCESSION formula SUR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT RETROCESSION DATE SUR LIDENT SUR
##
## Ends in an error in state: 90.
##
## simple_expr -> RETROCESSION formula SUR holder . option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## RETROCESSION formula SUR holder
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 61, spurious reduction of production actor_desc -> LIDENT
## In state 65, spurious reduction of production actor -> actor_desc
## In state 66, spurious reduction of production holder -> actor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART VERS
##
## Ends in an error in state: 93.
##
## simple_expr -> QUOTEPART . formula option(destinataire) list(opposable) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## simple_expr -> QUOTEPART . RESTE option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUOTEPART
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART RESTE UIDENT
##
## Ends in an error in state: 94.
##
## simple_expr -> QUOTEPART RESTE . option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUOTEPART RESTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE SUR
##
## Ends in an error in state: 96.
##
## formula_desc -> formula . PLUS formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPPOSABLE OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MINUS formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPPOSABLE OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MULT formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPPOSABLE OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . DIV formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPPOSABLE OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . COURANT [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPPOSABLE OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . TOTAL [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPPOSABLE OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## simple_expr -> QUOTEPART formula . option(destinataire) list(opposable) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUOTEPART formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE VERS LIDENT VERS
##
## Ends in an error in state: 97.
##
## simple_expr -> QUOTEPART formula option(destinataire) . list(opposable) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUOTEPART formula option(destinataire)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 61, spurious reduction of production actor_desc -> LIDENT
## In state 65, spurious reduction of production actor -> actor_desc
## In state 66, spurious reduction of production holder -> actor
## In state 64, spurious reduction of production destinataire -> VERS holder
## In state 92, spurious reduction of production option(destinataire) -> destinataire
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE OPPOSABLE VERS
##
## Ends in an error in state: 98.
##
## opposable -> OPPOSABLE . formula ENVERS actor PAR actor [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPPOSABLE OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPPOSABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE OPPOSABLE DATE VERS
##
## Ends in an error in state: 99.
##
## formula_desc -> formula . PLUS formula [ TOTAL PLUS MULT MINUS ENVERS DIV COURANT ]
## formula_desc -> formula . MINUS formula [ TOTAL PLUS MULT MINUS ENVERS DIV COURANT ]
## formula_desc -> formula . MULT formula [ TOTAL PLUS MULT MINUS ENVERS DIV COURANT ]
## formula_desc -> formula . DIV formula [ TOTAL PLUS MULT MINUS ENVERS DIV COURANT ]
## formula_desc -> formula . COURANT [ TOTAL PLUS MULT MINUS ENVERS DIV COURANT ]
## formula_desc -> formula . TOTAL [ TOTAL PLUS MULT MINUS ENVERS DIV COURANT ]
## opposable -> OPPOSABLE formula . ENVERS actor PAR actor [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPPOSABLE OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPPOSABLE formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE OPPOSABLE DATE ENVERS VERS
##
## Ends in an error in state: 100.
##
## opposable -> OPPOSABLE formula ENVERS . actor PAR actor [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPPOSABLE OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPPOSABLE formula ENVERS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE OPPOSABLE DATE ENVERS LIDENT VERS
##
## Ends in an error in state: 101.
##
## opposable -> OPPOSABLE formula ENVERS actor . PAR actor [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPPOSABLE OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPPOSABLE formula ENVERS actor
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 61, spurious reduction of production actor_desc -> LIDENT
## In state 65, spurious reduction of production actor -> actor_desc
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE OPPOSABLE DATE ENVERS LIDENT PAR VERS
##
## Ends in an error in state: 102.
##
## opposable -> OPPOSABLE formula ENVERS actor PAR . actor [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPPOSABLE OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## OPPOSABLE formula ENVERS actor PAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUOTEPART DATE OPPOSABLE DATE ENVERS LIDENT PAR LIDENT VERS
##
## Ends in an error in state: 104.
##
## list(opposable) -> opposable . list(opposable) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## opposable
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 61, spurious reduction of production actor_desc -> LIDENT
## In state 65, spurious reduction of production actor -> actor_desc
## In state 103, spurious reduction of production opposable -> OPPOSABLE formula ENVERS actor PAR actor
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUAND VERS
##
## Ends in an error in state: 107.
##
## when_expr(simple_exprs) -> QUAND . event_expr sub_expression(simple_exprs) [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUAND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: EVENEMENT LIDENT ATTEINT QUAND EVENEMENT VERS
##
## Ends in an error in state: 108.
##
## event_expr_desc -> EVENEMENT . LIDENT [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## EVENEMENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: EVENEMENT LIDENT ATTEINT QUAND DATE VERS
##
## Ends in an error in state: 110.
##
## event_expr_desc -> formula . EQ formula [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . PLUS formula [ TOTAL PLUS MULT MINUS EQ DIV COURANT ]
## formula_desc -> formula . MINUS formula [ TOTAL PLUS MULT MINUS EQ DIV COURANT ]
## formula_desc -> formula . MULT formula [ TOTAL PLUS MULT MINUS EQ DIV COURANT ]
## formula_desc -> formula . DIV formula [ TOTAL PLUS MULT MINUS EQ DIV COURANT ]
## formula_desc -> formula . COURANT [ TOTAL PLUS MULT MINUS EQ DIV COURANT ]
## formula_desc -> formula . TOTAL [ TOTAL PLUS MULT MINUS EQ DIV COURANT ]
##
## The known suffix of the stack is as follows:
## formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: EVENEMENT LIDENT ATTEINT QUAND DATE EQ VERS
##
## Ends in an error in state: 111.
##
## event_expr_desc -> formula EQ . formula [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: EVENEMENT LIDENT ATTEINT QUAND DATE EQ DATE VERS
##
## Ends in an error in state: 112.
##
## event_expr_desc -> formula EQ formula . [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . PLUS formula [ VALEUR TOTAL RETROCESSION QUOTEPART PLUS OU OPERATION MULT MINUS LPAR EVENEMENT ET EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . MINUS formula [ VALEUR TOTAL RETROCESSION QUOTEPART PLUS OU OPERATION MULT MINUS LPAR EVENEMENT ET EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . MULT formula [ VALEUR TOTAL RETROCESSION QUOTEPART PLUS OU OPERATION MULT MINUS LPAR EVENEMENT ET EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . DIV formula [ VALEUR TOTAL RETROCESSION QUOTEPART PLUS OU OPERATION MULT MINUS LPAR EVENEMENT ET EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . COURANT [ VALEUR TOTAL RETROCESSION QUOTEPART PLUS OU OPERATION MULT MINUS LPAR EVENEMENT ET EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . TOTAL [ VALEUR TOTAL RETROCESSION QUOTEPART PLUS OU OPERATION MULT MINUS LPAR EVENEMENT ET EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## formula EQ formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUAND EVENEMENT LIDENT VALEUR
##
## Ends in an error in state: 114.
##
## event_expr_desc -> event_expr . ET event_expr [ RETROCESSION QUOTEPART OU LPAR ET BONUS ]
## event_expr_desc -> event_expr . OU event_expr [ RETROCESSION QUOTEPART OU LPAR ET BONUS ]
## when_expr(simple_exprs) -> QUAND event_expr . sub_expression(simple_exprs) [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUAND event_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: EVENEMENT LIDENT ATTEINT QUAND EVENEMENT LIDENT OU VERS
##
## Ends in an error in state: 115.
##
## event_expr_desc -> event_expr OU . event_expr [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## event_expr OU
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: EVENEMENT LIDENT ATTEINT QUAND EVENEMENT LIDENT OU EVENEMENT LIDENT VERS
##
## Ends in an error in state: 116.
##
## event_expr_desc -> event_expr . ET event_expr [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## event_expr_desc -> event_expr . OU event_expr [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
## event_expr_desc -> event_expr OU event_expr . [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## event_expr OU event_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: EVENEMENT LIDENT ATTEINT QUAND EVENEMENT LIDENT ET VERS
##
## Ends in an error in state: 117.
##
## event_expr_desc -> event_expr ET . event_expr [ VALEUR RETROCESSION QUOTEPART OU OPERATION LPAR EVENEMENT ET EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE COLON BONUS AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## event_expr ET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT APRES EVENEMENT LIDENT LPAR VERS
##
## Ends in an error in state: 119.
##
## sub_expression(simple_exprs) -> LPAR . expression(simple_exprs) RPAR [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT BONUS VERS
##
## Ends in an error in state: 120.
##
## simple_expr -> BONUS . formula option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## BONUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT BONUS DATE SUR
##
## Ends in an error in state: 121.
##
## formula_desc -> formula . PLUS formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MINUS formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . MULT formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . DIV formula [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . COURANT [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## formula_desc -> formula . TOTAL [ VERS VALEUR TOTAL RPAR RETROCESSION QUOTEPART QUAND PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
## simple_expr -> BONUS formula . option(destinataire) [ VALEUR RPAR RETROCESSION QUOTEPART QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE BONUS AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## BONUS formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT AVANT VERS
##
## Ends in an error in state: 123.
##
## before_expr(simple_exprs) -> AVANT . event_expr sub_expression(simple_exprs) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT AVANT EVENEMENT LIDENT VALEUR
##
## Ends in an error in state: 124.
##
## before_expr(simple_exprs) -> AVANT event_expr . sub_expression(simple_exprs) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## event_expr_desc -> event_expr . ET event_expr [ RETROCESSION QUOTEPART OU LPAR ET BONUS ]
## event_expr_desc -> event_expr . OU event_expr [ RETROCESSION QUOTEPART OU LPAR ET BONUS ]
##
## The known suffix of the stack is as follows:
## AVANT event_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT BONUS DATE VERS LIDENT MONTANT
##
## Ends in an error in state: 127.
##
## nonempty_list(simple_expr) -> simple_expr . [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## nonempty_list(simple_expr) -> simple_expr . nonempty_list(simple_expr) [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## simple_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 61, spurious reduction of production actor_desc -> LIDENT
## In state 65, spurious reduction of production actor -> actor_desc
## In state 66, spurious reduction of production holder -> actor
## In state 64, spurious reduction of production destinataire -> VERS holder
## In state 92, spurious reduction of production option(destinataire) -> destinataire
## In state 122, spurious reduction of production simple_expr -> BONUS formula option(destinataire)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT APRES VERS
##
## Ends in an error in state: 130.
##
## after_expr(simple_exprs) -> APRES . event_expr sub_expression(simple_exprs) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## APRES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT APRES EVENEMENT LIDENT VALEUR
##
## Ends in an error in state: 131.
##
## after_expr(simple_exprs) -> APRES event_expr . sub_expression(simple_exprs) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
## event_expr_desc -> event_expr . ET event_expr [ RETROCESSION QUOTEPART OU LPAR ET BONUS ]
## event_expr_desc -> event_expr . OU event_expr [ RETROCESSION QUOTEPART OU LPAR ET BONUS ]
##
## The known suffix of the stack is as follows:
## APRES event_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT QUAND EVENEMENT LIDENT BONUS DATE AVANT
##
## Ends in an error in state: 133.
##
## nonempty_list(when_expr(simple_exprs)) -> when_expr(simple_exprs) . [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## nonempty_list(when_expr(simple_exprs)) -> when_expr(simple_exprs) . nonempty_list(when_expr(simple_exprs)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## when_expr(simple_exprs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 121, spurious reduction of production option(destinataire) ->
## In state 122, spurious reduction of production simple_expr -> BONUS formula option(destinataire)
## In state 127, spurious reduction of production nonempty_list(simple_expr) -> simple_expr
## In state 129, spurious reduction of production simple_exprs -> nonempty_list(simple_expr)
## In state 126, spurious reduction of production sub_expression(simple_exprs) -> simple_exprs
## In state 149, spurious reduction of production when_expr(simple_exprs) -> QUAND event_expr sub_expression(simple_exprs)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT AVANT EVENEMENT LIDENT BONUS DATE APRES EVENEMENT LIDENT BONUS DATE QUAND
##
## Ends in an error in state: 139.
##
## list(after_expr(simple_exprs)) -> after_expr(simple_exprs) . list(after_expr(simple_exprs)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## after_expr(simple_exprs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 121, spurious reduction of production option(destinataire) ->
## In state 122, spurious reduction of production simple_expr -> BONUS formula option(destinataire)
## In state 127, spurious reduction of production nonempty_list(simple_expr) -> simple_expr
## In state 129, spurious reduction of production simple_exprs -> nonempty_list(simple_expr)
## In state 126, spurious reduction of production sub_expression(simple_exprs) -> simple_exprs
## In state 132, spurious reduction of production after_expr(simple_exprs) -> APRES event_expr sub_expression(simple_exprs)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT APRES EVENEMENT LIDENT LPAR BONUS DATE VALEUR
##
## Ends in an error in state: 142.
##
## sub_expression(simple_exprs) -> LPAR expression(simple_exprs) . RPAR [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LPAR expression(simple_exprs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 121, spurious reduction of production option(destinataire) ->
## In state 122, spurious reduction of production simple_expr -> BONUS formula option(destinataire)
## In state 127, spurious reduction of production nonempty_list(simple_expr) -> simple_expr
## In state 129, spurious reduction of production simple_exprs -> nonempty_list(simple_expr)
## In state 135, spurious reduction of production expression(simple_exprs) -> simple_exprs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT AVANT EVENEMENT LIDENT BONUS DATE QUAND
##
## Ends in an error in state: 145.
##
## nonempty_list(before_expr(simple_exprs)) -> before_expr(simple_exprs) . [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
## nonempty_list(before_expr(simple_exprs)) -> before_expr(simple_exprs) . nonempty_list(before_expr(simple_exprs)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## before_expr(simple_exprs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 121, spurious reduction of production option(destinataire) ->
## In state 122, spurious reduction of production simple_expr -> BONUS formula option(destinataire)
## In state 127, spurious reduction of production nonempty_list(simple_expr) -> simple_expr
## In state 129, spurious reduction of production simple_exprs -> nonempty_list(simple_expr)
## In state 126, spurious reduction of production sub_expression(simple_exprs) -> simple_exprs
## In state 125, spurious reduction of production before_expr(simple_exprs) -> AVANT event_expr sub_expression(simple_exprs)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: OPERATION LABEL PAR LIDENT APRES EVENEMENT LIDENT BONUS DATE QUAND
##
## Ends in an error in state: 147.
##
## nonempty_list(after_expr(simple_exprs)) -> after_expr(simple_exprs) . [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## nonempty_list(after_expr(simple_exprs)) -> after_expr(simple_exprs) . nonempty_list(after_expr(simple_exprs)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## after_expr(simple_exprs)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 121, spurious reduction of production option(destinataire) ->
## In state 122, spurious reduction of production simple_expr -> BONUS formula option(destinataire)
## In state 127, spurious reduction of production nonempty_list(simple_expr) -> simple_expr
## In state 129, spurious reduction of production simple_exprs -> nonempty_list(simple_expr)
## In state 126, spurious reduction of production sub_expression(simple_exprs) -> simple_exprs
## In state 132, spurious reduction of production after_expr(simple_exprs) -> APRES event_expr sub_expression(simple_exprs)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENTREE LIDENT TYPE ARGENT VERS
##
## Ends in an error in state: 163.
##
## input_decl -> ENTREE LIDENT input_type . loption(input_context_decl) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ENTREE LIDENT input_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENTREE ASSIETTE LIDENT CONTEXTUALISEE VERS
##
## Ends in an error in state: 164.
##
## input_context_decl -> CONTEXTUALISEE . PAR input_context_list [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONTEXTUALISEE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENTREE ASSIETTE LIDENT CONTEXTUALISEE PAR VERS
##
## Ends in an error in state: 165.
##
## input_context_decl -> CONTEXTUALISEE PAR . input_context_list [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## CONTEXTUALISEE PAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENTREE ASSIETTE LIDENT CONTEXTUALISEE PAR MINUS VERS
##
## Ends in an error in state: 166.
##
## nonempty_list(preceded(MINUS,input_context)) -> MINUS . input_context [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## nonempty_list(preceded(MINUS,input_context)) -> MINUS . input_context nonempty_list(preceded(MINUS,input_context)) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENTREE ASSIETTE LIDENT CONTEXTUALISEE PAR TOUT UIDENT VERS
##
## Ends in an error in state: 170.
##
## nonempty_list(context) -> context . [ VALEUR OPERATION MINUS EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## nonempty_list(context) -> context . nonempty_list(context) [ VALEUR OPERATION MINUS EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## context
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENTREE ASSIETTE VERS
##
## Ends in an error in state: 177.
##
## input_decl -> ENTREE ASSIETTE . LIDENT loption(input_context_decl) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ENTREE ASSIETTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ENTREE ASSIETTE LIDENT VERS
##
## Ends in an error in state: 178.
##
## input_decl -> ENTREE ASSIETTE LIDENT . loption(input_context_decl) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ENTREE ASSIETTE LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: DEFICIT SUR VERS
##
## Ends in an error in state: 181.
##
## deficit_decl -> DEFICIT SUR . pool PAR holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFICIT SUR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: DEFAUT SUR VERS
##
## Ends in an error in state: 186.
##
## default_decl -> DEFAUT SUR . pool VERS holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFAUT SUR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: DEFAUT SUR ASSIETTE LIDENT VALEUR
##
## Ends in an error in state: 187.
##
## default_decl -> DEFAUT SUR pool . VERS holder [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## DEFAUT SUR pool
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production raw_pool0 -> LIDENT
## In state 34, spurious reduction of production pool -> ASSIETTE raw_pool0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: AVANCE LABEL SUR VERS
##
## Ends in an error in state: 204.
##
## advance -> AVANCE LABEL SUR . holder PAR actor MONTANT formula [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE LABEL SUR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: AVANCE LABEL SUR LIDENT PAR LIDENT VERS
##
## Ends in an error in state: 207.
##
## advance -> AVANCE LABEL SUR holder PAR actor . MONTANT formula [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE LABEL SUR holder PAR actor
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 61, spurious reduction of production actor_desc -> LIDENT
## In state 65, spurious reduction of production actor -> actor_desc
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: AVANCE LABEL SUR LIDENT PAR LIDENT MONTANT VERS
##
## Ends in an error in state: 208.
##
## advance -> AVANCE LABEL SUR holder PAR actor MONTANT . formula [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE LABEL SUR holder PAR actor MONTANT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: AVANCE LABEL SUR LIDENT PAR LIDENT MONTANT DATE VERS
##
## Ends in an error in state: 209.
##
## advance -> AVANCE LABEL SUR holder PAR actor MONTANT formula . [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . PLUS formula [ VALEUR TOTAL PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . MINUS formula [ VALEUR TOTAL PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . MULT formula [ VALEUR TOTAL PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . DIV formula [ VALEUR TOTAL PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . COURANT [ VALEUR TOTAL PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## formula_desc -> formula . TOTAL [ VALEUR TOTAL PLUS OPERATION MULT MINUS EVENEMENT EOF ENTREE DIV DEFICIT DEFAUT COURANT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANCE LABEL SUR holder PAR actor MONTANT formula
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE VERS
##
## Ends in an error in state: 210.
##
## comp_pool_decl -> ASSIETTE . CALCULEE LIDENT list(op_context) expression(value_def) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ASSIETTE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE VERS
##
## Ends in an error in state: 211.
##
## comp_pool_decl -> ASSIETTE CALCULEE . LIDENT list(op_context) expression(value_def) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ASSIETTE CALCULEE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT VERS
##
## Ends in an error in state: 212.
##
## comp_pool_decl -> ASSIETTE CALCULEE LIDENT . list(op_context) expression(value_def) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ASSIETTE CALCULEE LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT POUR TOUT UIDENT SUR
##
## Ends in an error in state: 213.
##
## comp_pool_decl -> ASSIETTE CALCULEE LIDENT list(op_context) . expression(value_def) [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ASSIETTE CALCULEE LIDENT list(op_context)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 79, spurious reduction of production list(op_context) ->
## In state 80, spurious reduction of production list(op_context) -> op_context list(op_context)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT QUAND VERS
##
## Ends in an error in state: 214.
##
## when_expr(value_def) -> QUAND . event_expr sub_expression(value_def) [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUAND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT QUAND EVENEMENT LIDENT VALEUR
##
## Ends in an error in state: 215.
##
## event_expr_desc -> event_expr . ET event_expr [ OU LPAR ET COLON ]
## event_expr_desc -> event_expr . OU event_expr [ OU LPAR ET COLON ]
## when_expr(value_def) -> QUAND event_expr . sub_expression(value_def) [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## QUAND event_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT APRES EVENEMENT LIDENT LPAR VERS
##
## Ends in an error in state: 216.
##
## sub_expression(value_def) -> LPAR . expression(value_def) RPAR [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LPAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT AVANT VERS
##
## Ends in an error in state: 217.
##
## before_expr(value_def) -> AVANT . event_expr sub_expression(value_def) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## AVANT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT AVANT EVENEMENT LIDENT VALEUR
##
## Ends in an error in state: 218.
##
## before_expr(value_def) -> AVANT event_expr . sub_expression(value_def) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
## event_expr_desc -> event_expr . ET event_expr [ OU LPAR ET COLON ]
## event_expr_desc -> event_expr . OU event_expr [ OU LPAR ET COLON ]
##
## The known suffix of the stack is as follows:
## AVANT event_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT APRES VERS
##
## Ends in an error in state: 221.
##
## after_expr(value_def) -> APRES . event_expr sub_expression(value_def) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## APRES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT APRES EVENEMENT LIDENT VALEUR
##
## Ends in an error in state: 222.
##
## after_expr(value_def) -> APRES event_expr . sub_expression(value_def) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
## event_expr_desc -> event_expr . ET event_expr [ OU LPAR ET COLON ]
## event_expr_desc -> event_expr . OU event_expr [ OU LPAR ET COLON ]
##
## The known suffix of the stack is as follows:
## APRES event_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT QUAND EVENEMENT LIDENT COLON DATE AVANT
##
## Ends in an error in state: 224.
##
## nonempty_list(when_expr(value_def)) -> when_expr(value_def) . [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## nonempty_list(when_expr(value_def)) -> when_expr(value_def) . nonempty_list(when_expr(value_def)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## when_expr(value_def)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 56, spurious reduction of production value_def -> COLON formula
## In state 219, spurious reduction of production sub_expression(value_def) -> value_def
## In state 240, spurious reduction of production when_expr(value_def) -> QUAND event_expr sub_expression(value_def)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT AVANT EVENEMENT LIDENT COLON DATE APRES EVENEMENT LIDENT COLON DATE QUAND
##
## Ends in an error in state: 230.
##
## list(after_expr(value_def)) -> after_expr(value_def) . list(after_expr(value_def)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## after_expr(value_def)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 56, spurious reduction of production value_def -> COLON formula
## In state 219, spurious reduction of production sub_expression(value_def) -> value_def
## In state 223, spurious reduction of production after_expr(value_def) -> APRES event_expr sub_expression(value_def)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT APRES EVENEMENT LIDENT LPAR COLON DATE VALEUR
##
## Ends in an error in state: 233.
##
## sub_expression(value_def) -> LPAR expression(value_def) . RPAR [ VALEUR RPAR QUAND OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANT AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## LPAR expression(value_def)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 56, spurious reduction of production value_def -> COLON formula
## In state 226, spurious reduction of production expression(value_def) -> value_def
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT AVANT EVENEMENT LIDENT COLON DATE QUAND
##
## Ends in an error in state: 236.
##
## nonempty_list(before_expr(value_def)) -> before_expr(value_def) . [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
## nonempty_list(before_expr(value_def)) -> before_expr(value_def) . nonempty_list(before_expr(value_def)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE APRES ACTEUR ]
##
## The known suffix of the stack is as follows:
## before_expr(value_def)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 56, spurious reduction of production value_def -> COLON formula
## In state 219, spurious reduction of production sub_expression(value_def) -> value_def
## In state 220, spurious reduction of production before_expr(value_def) -> AVANT event_expr sub_expression(value_def)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ASSIETTE CALCULEE LIDENT APRES EVENEMENT LIDENT COLON DATE QUAND
##
## Ends in an error in state: 238.
##
## nonempty_list(after_expr(value_def)) -> after_expr(value_def) . [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
## nonempty_list(after_expr(value_def)) -> after_expr(value_def) . nonempty_list(after_expr(value_def)) [ VALEUR RPAR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## after_expr(value_def)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 56, spurious reduction of production value_def -> COLON formula
## In state 219, spurious reduction of production sub_expression(value_def) -> value_def
## In state 223, spurious reduction of production after_expr(value_def) -> APRES event_expr sub_expression(value_def)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ACTEUR VERS
##
## Ends in an error in state: 242.
##
## actor_decl -> ACTEUR . LIDENT [ VALEUR OPERATION EVENEMENT EOF ENTREE DEFICIT DEFAUT CONTEXTE CONSTANTE AVANCE ASSIETTE ACTEUR ]
##
## The known suffix of the stack is as follows:
## ACTEUR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: ACTEUR LIDENT RPAR
##
## Ends in an error in state: 245.
##
## list(toplevel_decl) -> toplevel_decl . list(toplevel_decl) [ EOF ]
##
## The known suffix of the stack is as follows:
## toplevel_decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

raw_pool: VERS
##
## Ends in an error in state: 260.
##
## raw_pool' -> . raw_pool [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

raw_pool: LIDENT VERS
##
## Ends in an error in state: 261.
##
## raw_pool -> raw_pool0 . EOF [ # ]
##
## The known suffix of the stack is as follows:
## raw_pool0
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 32, spurious reduction of production raw_pool0 -> LIDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>
